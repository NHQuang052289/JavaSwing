/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.DAO;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.PeopleClass;

/**
 *
 * @author qn052
 */
public final class FrameDanCu extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private ArrayList<PeopleClass> list;
    DefaultTableModel model;
    DAO daoPeople = new DAO();
    int editIndex;
    private final ArrayList<PeopleClass> listNew=new ArrayList<>();
    EdiPeopleFrm edit = new EdiPeopleFrm(this, rootPaneCheckingEnabled);
    
    public FrameDanCu() {
        initComponents();
        this.setLocationRelativeTo(null);
        //list = new ArrayList<PeopleClass>();
        list = new DAO().getListPeople();
        model = (DefaultTableModel) myTable.getModel();
        
        model.setColumnIdentifiers(new Object[]{
        "ID", "Name", "Birth Day", "Gender", "Phone", "Room", "Home Towns"
    });
        showTable();
    }
    public void showTable(){
        list.forEach(p -> {
            model.addRow(new Object[]{
                p.getID(), p.getName(), p.getBirthDay(), p.getGender(), p.getPhone(), p.getRoom(), p.getHomeTowns()
            });
        });   
    }

    public void showSearch(ArrayList<PeopleClass>listt){
        //listt = new ArrayList<>();
        for(int i = 0; i < listt.size(); i++)
        {
            model.addRow(new Object[]{
                listt.get(i).getID(), listt.get(i).getName(), listt.get(i).getBirthDay(), listt.get(i).getGender(),
                listt.get(i).getPhone(), listt.get(i).getRoom(), listt.get(i).getHomeTowns()
            });
        }
        
    }

    /**
     * This method is called from within the  constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelDisplay = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        myTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtBirthDay = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        txtGender = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        txtPhone = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        txtRoom = new javax.swing.JTextField();
        labelCountry = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        labelName = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtHomeTown = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        labelID = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("People Management");

        labelDisplay.setBackground(new java.awt.Color(255, 255, 255));
        labelDisplay.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        labelDisplay.setForeground(new java.awt.Color(51, 0, 255));
        labelDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDisplay.setIcon(new javax.swing.ImageIcon("C:\\Users\\qn052\\OneDrive\\Desktop\\Untitled.png")); // NOI18N
        labelDisplay.setText("People Management");
        labelDisplay.setFocusable(false);
        labelDisplay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelDisplay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        myTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Birth Day", "Gender", "Phone", "Room", "Home Towns"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        myTable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                myTableAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(myTable);

        jLabel4.setText("Room:");

        btnAdd.setMnemonic('A');
        btnAdd.setText("Add");
        btnAdd.setToolTipText("Click to Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRefresh.setMnemonic('D');
        btnRefresh.setText("Refresh");
        btnRefresh.setToolTipText("Click to Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        btnDelete.setMnemonic('E');
        btnDelete.setText("Delete");
        btnDelete.setToolTipText("Click to Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        labelCountry.setText("Home Towns:");

        txtName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        labelName.setText("Name:");

        jLabel1.setText("Birth Day:");

        jLabel2.setText("Gender:");

        labelID.setText("ID:");

        jLabel3.setText("Phone:");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnBack.setText("Home Page");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(5, 5, 5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2)
                                            .addComponent(labelCountry))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtGender, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtHomeTown, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelID)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRefresh)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEdit)))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelDisplay)
                    .addComponent(btnBack))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelID)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtBirthDay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtRoom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHomeTown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCountry))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelete)
                            .addComponent(btnRefresh)
                            .addComponent(btnAdd)
                            .addComponent(btnSearch)
                            .addComponent(btnEdit)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myTableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_myTableAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_myTableAncestorAdded

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        PeopleClass people = new PeopleClass();

        people.setID(Integer.parseInt(txtID.getText()));
        people.setName(txtName.getText());
        people.setPhone(txtPhone.getText());
        people.setRender(txtGender.getText());
        people.setRoom(txtRoom.getText());
        people.setHomeTowns(txtHomeTown.getText());
        try{
            people.setBirthDay(new SimpleDateFormat("dd/MM/yyyy").parse(txtBirthDay.getText()));
        }catch(ParseException ex){
        }

        if(new DAO().addPeople(people)){
            JOptionPane.showMessageDialog(rootPane, "Add people success!");
            list.add(people);
            showResult();
        }else{
            JOptionPane.showMessageDialog(rootPane, "ID People cannot be duplicate!!!");
        }
    }//GEN-LAST:event_btnAddActionPerformed
    public void showResult(){
        PeopleClass p = list.get(list.size() - 1);
        model.addRow(new Object[]{
            p.getID(), p.getName(), p.getBirthDay(), p.getGender(), p.getPhone(), p.getRoom(), p.getHomeTowns()
        });
    }
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        txtBirthDay.setText("");
        txtGender.setText("");
        txtName.setText("");
        txtPhone.setText("");
        txtRoom.setText("");
        txtHomeTown.setText("");
        txtID.setText("");
        model.setRowCount(0);
        showTable();
        listNew.clear();
        JOptionPane.showMessageDialog(rootPane, "Refreshed!");
        
        //labelDisplay.setVisible(false); hide label

    }//GEN-LAST:event_btnRefreshActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int removeIndex = myTable.getSelectedRow();
        if(removeIndex == -1){
            JOptionPane.showMessageDialog(rootPane, "Select one row, please!");
        }else if(list.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "No information to delete!");
        }else{
            int confirm = JOptionPane.showConfirmDialog(this, "Do you want to delete this person?");
            if(confirm == 0){
                if(!listNew.isEmpty())
                {
                    daoPeople.deletePeople(listNew.get(removeIndex).getID());
                    listNew.remove(removeIndex);
                }
                else{
                    daoPeople.deletePeople(list.get(removeIndex).getID());
                    list.remove(removeIndex);
                }
                
                list.clear();
                list = new DAO().getListPeople();
                listNew.clear();
            }
            model.setRowCount(0);
            showTable();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String keyWord =JOptionPane.showInputDialog(this, "Key Word");
        //ArrayList<PeopleClass>listSearch = new ArrayList<>();
        listNew.clear();
        if(keyWord.length()>0 && keyWord != null){
            for(int i = 0; i < list.size(); i++)
            {
                if(list.get(i).getName().contains(keyWord) || list.get(i).getGender().contains(keyWord)
                   || list.get(i).getPhone().contains(keyWord) || list.get(i).getRoom().contains(keyWord))
                listNew.add(list.get(i));
            }
            model.setRowCount(0);
            showSearch(listNew);
        }else{
            JOptionPane.showMessageDialog(rootPane, "Please write some words!");
            model.setRowCount(0);
            showTable();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        new TrangChu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        editIndex = myTable.getSelectedRow();
        if(editIndex == -1){
            JOptionPane.showMessageDialog(rootPane, "Select one row, please!");
        }else if(list.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "No information to delete!");
        }else{
            int confirm = JOptionPane.showConfirmDialog(this, "Do you want to edit?");
            if(confirm == 0){
                if(!listNew.isEmpty())
                {
                    edit.setEditData(listNew.get(editIndex));
                }else{
                    edit.setEditData(list.get(editIndex)); 
                }
                edit.setVisible(true);
            }

        }
        
    }//GEN-LAST:event_btnEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameDanCu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameDanCu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameDanCu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameDanCu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrameDanCu().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCountry;
    private javax.swing.JLabel labelDisplay;
    private javax.swing.JLabel labelID;
    private javax.swing.JLabel labelName;
    private javax.swing.JTable myTable;
    private javax.swing.JTextField txtBirthDay;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtHomeTown;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtRoom;
    // End of variables declaration//GEN-END:variables

    private void labelDisplay(String you_added) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    void updatePeople(PeopleClass people) {
        people = new PeopleClass();
        //EditFrm ed= new EditFrm(this, rootPaneCheckingEnabled);
        System.out.println(editIndex);
        
        String idEdit = edit.getTxtID().getText();
        String nameEdit= edit.getTxtName().getText();
        String phoneEdit = edit.getTxtPhone().getText();
        String renderEdit = edit.getTxtGender().getText();
        String roomEdit = edit.getTxtRoom().getText();
        String homeTownEdit = edit.getTxtHomeTown().getText();
        String dobEdit = edit.getTxtBirthDay().getText();
        
        people.setID(Integer.parseInt(idEdit));
        people.setName(nameEdit);
        people.setPhone(phoneEdit);
        people.setRender(renderEdit);
        people.setRoom(roomEdit);
        people.setHomeTowns(homeTownEdit);
        try{
            people.setBirthDay(new SimpleDateFormat("dd/MM/yyyy").parse(dobEdit));
        }catch(ParseException ex){
          System.out.println("loi upatde"+ex.toString());
        }
        if(!listNew.isEmpty())
        {
            daoPeople.editPeople(listNew.get(editIndex).getID(), people);
        //list.set(editIndex, people);
        }else{
            daoPeople.editPeople(list.get(editIndex).getID(), people);
        }
        list.clear();
        list = new DAO().getListPeople();
        model.setRowCount(0);
        showTable();
        
    }
}
